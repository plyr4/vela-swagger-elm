{-
   Vela server
   API for the Vela server

   OpenAPI spec version: 0.23.2
   

   NOTE: This file is auto generated by the swagger code generator program.
   https://github.com/swagger-api/swagger-codegen.git
   Do not edit this file manually.
-}


module Request.Authenticate exposing (getAuthToken, getAuthenticateTypeCLI, getAuthenticateTypeWeb, getLogin, getLogout, getRefreshAccessToken, postAuthToken, validateOAuthToken, validateServerToken)

import Data.Error exposing (Error, errorDecoder)
import Data.Token exposing (Token, tokenDecoder)
import Data.String exposing (Decode.string, String)
import Http
import Json.Decode as Decode


basePath : String
basePath =
    "http://localhost"


{-
   Start OAuth flow or exchange tokens
-}
getAuthToken : Http.Request Token
getAuthToken =
    { method = "GET"
    , url = basePath ++ "/authenticate"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson tokenDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Authentication entrypoint that builds the right post-auth redirect URL for CLI authentication requests and redirects to /authenticate after
-}
getAuthenticateTypeCLI : Int -> Http.Request ()
getAuthenticateTypeCLI port_ =
    { method = "GET"
    , url = basePath ++ "/authenticate/cli/{port}"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Authentication entrypoint that builds the right post-auth redirect URL for web authentication requests and redirects to /authenticate after
-}
getAuthenticateTypeWeb : Http.Request ()
getAuthenticateTypeWeb =
    { method = "GET"
    , url = basePath ++ "/authenticate/web"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Log into the Vela api
-}
getLogin : Http.Request ()
getLogin =
    { method = "GET"
    , url = basePath ++ "/login"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Log out of the Vela api
-}
getLogout : Http.Request String
getLogout =
    { method = "GET"
    , url = basePath ++ "/logout"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Refresh an access token
-}
getRefreshAccessToken : Http.Request Token
getRefreshAccessToken =
    { method = "GET"
    , url = basePath ++ "/token-refresh"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson tokenDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Authenticate to Vela via personal access token
-}
postAuthToken : Http.Request Token
postAuthToken =
    { method = "POST"
    , url = basePath ++ "/authenticate/token"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson tokenDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Validate that a user oauth token was created by Vela
-}
validateOAuthToken : Http.Request Token
validateOAuthToken =
    { method = "GET"
    , url = basePath ++ "/validate-oauth"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson tokenDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Validate a server token
-}
validateServerToken : Http.Request String
validateServerToken =
    { method = "GET"
    , url = basePath ++ "/validate-token"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


