{-
   Vela server
   API for the Vela server

   OpenAPI spec version: 0.23.2
   

   NOTE: This file is auto generated by the swagger code generator program.
   https://github.com/swagger-api/swagger-codegen.git
   Do not edit this file manually.
-}


module Request.Webhook exposing (createHook, deleteHook, getHook, listHooks, redeliverHook, updateHook)

import Data.Error exposing (Error, errorDecoder)
import Data.Webhook exposing (Webhook, webhookDecoder, webhookEncoder)
import Data.String exposing (Decode.string, String)
import Http
import Json.Decode as Decode


basePath : String
basePath =
    "http://localhost"


{-
   Create a webhook for the configured backend
-}
createHook : String -> String -> Webhook -> Http.Request Webhook
createHook org repo model =
    { method = "POST"
    , url = basePath ++ "/api/v1/hooks/" ++ org ++ "/" ++ repo
    , headers = []
    , body = Http.jsonBody <| webhookEncoder model
    , expect = Http.expectJson webhookDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Delete a webhook for the configured backend
-}
deleteHook : String -> String -> Int -> Http.Request String
deleteHook org repo hook =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/hooks/" ++ org ++ "/" ++ repo ++ "/" ++ toString hook
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Retrieve a webhook for the configured backend
-}
getHook : String -> String -> Int -> Http.Request Webhook
getHook org repo hook =
    { method = "GET"
    , url = basePath ++ "/api/v1/hooks/" ++ org ++ "/" ++ repo ++ "/" ++ toString hook
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson webhookDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Retrieve the webhooks for the configured backend
-}
listHooks : String -> String -> Http.Request (List Webhook)
listHooks org repo =
    { method = "GET"
    , url = basePath ++ "/api/v1/hooks/" ++ org ++ "/" ++ repo
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson (Decode.list webhookDecoder)
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Redeliver a webhook from the SCM
-}
redeliverHook : String -> String -> Int -> Http.Request Webhook
redeliverHook org repo hook =
    { method = "POST"
    , url = basePath ++ "/api/v1/hooks/" ++ org ++ "/" ++ repo ++ "/" ++ toString hook ++ "/redeliver"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson webhookDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Update a webhook for the configured backend
-}
updateHook : String -> String -> Int -> Webhook -> Http.Request Webhook
updateHook org repo hook model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/hooks/" ++ org ++ "/" ++ repo ++ "/" ++ toString hook
    , headers = []
    , body = Http.jsonBody <| webhookEncoder model
    , expect = Http.expectJson webhookDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


