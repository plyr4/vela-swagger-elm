{-
   Vela server
   API for the Vela server

   OpenAPI spec version: 0.23.2
   

   NOTE: This file is auto generated by the swagger code generator program.
   https://github.com/swagger-api/swagger-codegen.git
   Do not edit this file manually.
-}


module Request.Steps exposing (createStep, createStepLog, deleteStep, deleteStepLog, getStep, getStepLog, listSteps, updateStep, updateStepLog)

import Data.Log exposing (Log, logDecoder, logEncoder)
import Data.Error exposing (Error, errorDecoder)
import Data.Step exposing (Step, stepDecoder, stepEncoder)
import Data.String exposing (Decode.string, String)
import Http
import Json.Decode as Decode


basePath : String
basePath =
    "http://localhost"


{-
   Create a step for a build
-}
createStep : String -> String -> Int -> Step -> Http.Request Step
createStep org repo build model =
    { method = "POST"
    , url = basePath ++ "/api/v1/repos/" ++ org ++ "/" ++ repo ++ "/builds/" ++ toString build ++ "/steps"
    , headers = []
    , body = Http.jsonBody <| stepEncoder model
    , expect = Http.expectJson stepDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Create the logs for a step
-}
createStepLog : String -> String -> Int -> Int -> Log -> Http.Request ()
createStepLog org repo build step model =
    { method = "POST"
    , url = basePath ++ "/api/v1/repos/" ++ org ++ "/" ++ repo ++ "/builds/" ++ toString build ++ "/steps/" ++ toString step ++ "/logs"
    , headers = []
    , body = Http.jsonBody <| logEncoder model
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Delete a step for a build
-}
deleteStep : String -> String -> Int -> Int -> Http.Request String
deleteStep org repo build step =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/repos/" ++ org ++ "/" ++ repo ++ "/builds/" ++ toString build ++ "/steps/" ++ toString step
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Delete the logs for a step
-}
deleteStepLog : String -> String -> Int -> Int -> Http.Request String
deleteStepLog org repo build step =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/repos/" ++ org ++ "/" ++ repo ++ "/builds/" ++ toString build ++ "/steps/" ++ toString step ++ "/logs"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Retrieve a step for a build
-}
getStep : String -> String -> Int -> String -> Http.Request Step
getStep org repo build step =
    { method = "GET"
    , url = basePath ++ "/api/v1/repos/" ++ org ++ "/" ++ repo ++ "/builds/" ++ toString build ++ "/steps/" ++ step
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson stepDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Retrieve the logs for a step
-}
getStepLog : String -> String -> Int -> Int -> Http.Request Log
getStepLog org repo build step =
    { method = "GET"
    , url = basePath ++ "/api/v1/repos/" ++ org ++ "/" ++ repo ++ "/builds/" ++ toString build ++ "/steps/" ++ toString step ++ "/logs"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson logDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Retrieve a list of steps for a build
-}
listSteps : String -> String -> Int -> Http.Request (List Step)
listSteps org repo build =
    { method = "GET"
    , url = basePath ++ "/api/v1/repos/" ++ org ++ "/" ++ repo ++ "/builds/" ++ toString build ++ "/steps"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson (Decode.list stepDecoder)
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Update a step for a build
-}
updateStep : String -> String -> Int -> Int -> Step -> Http.Request Step
updateStep org repo build step model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/repos/" ++ org ++ "/" ++ repo ++ "/builds/" ++ toString build ++ "/steps/" ++ toString step
    , headers = []
    , body = Http.jsonBody <| stepEncoder model
    , expect = Http.expectJson stepDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Update the logs for a step
-}
updateStepLog : String -> String -> Int -> Int -> Log -> Http.Request Log
updateStepLog org repo build step model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/repos/" ++ org ++ "/" ++ repo ++ "/builds/" ++ toString build ++ "/steps/" ++ toString step ++ "/logs"
    , headers = []
    , body = Http.jsonBody <| logEncoder model
    , expect = Http.expectJson logDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


