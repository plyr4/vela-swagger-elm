{-
   Vela server
   API for the Vela server

   OpenAPI spec version: 0.23.2
   

   NOTE: This file is auto generated by the swagger code generator program.
   https://github.com/swagger-api/swagger-codegen.git
   Do not edit this file manually.
-}


module Request.Secrets exposing (createSecret, deleteSecret, getSecret, listSecrets, updateSecret)

import Data.Secret exposing (Secret, secretDecoder, secretEncoder)
import Data.Error exposing (Error, errorDecoder)
import Data.String exposing (Decode.string, String)
import Http
import Json.Decode as Decode


basePath : String
basePath =
    "http://localhost"


{-
   Create a secret
-}
createSecret : String -> String -> String -> String -> Secret -> Http.Request Secret
createSecret engine type_ org name model =
    { method = "POST"
    , url = basePath ++ "/api/v1/secrets/" ++ engine ++ "/{type}/" ++ org ++ "/" ++ name
    , headers = []
    , body = Http.jsonBody <| secretEncoder model
    , expect = Http.expectJson secretDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Delete a secret from the configured backend
-}
deleteSecret : String -> String -> String -> String -> String -> Http.Request String
deleteSecret engine type_ org name secret =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/secrets/" ++ engine ++ "/{type}/" ++ org ++ "/" ++ name ++ "/" ++ secret
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Retrieve a secret from the configured backend
-}
getSecret : String -> String -> String -> String -> String -> Http.Request Secret
getSecret engine type_ org name secret =
    { method = "GET"
    , url = basePath ++ "/api/v1/secrets/" ++ engine ++ "/{type}/" ++ org ++ "/" ++ name ++ "/" ++ secret
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson secretDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Retrieve a list of secrets from the configured backend
-}
listSecrets : String -> String -> String -> String -> Http.Request (List Secret)
listSecrets engine type_ org name =
    { method = "GET"
    , url = basePath ++ "/api/v1/secrets/" ++ engine ++ "/{type}/" ++ org ++ "/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson (Decode.list secretDecoder)
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Update a secret on the configured backend
-}
updateSecret : String -> String -> String -> String -> String -> Secret -> Http.Request Secret
updateSecret engine type_ org name secret model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/secrets/" ++ engine ++ "/{type}/" ++ org ++ "/" ++ name ++ "/" ++ secret
    , headers = []
    , body = Http.jsonBody <| secretEncoder model
    , expect = Http.expectJson secretDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


